{"version":3,"file":"static/js/79.6c1fb1ed.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/contacts/selector-contacts.js","components/Filter/FilterList.jsx","webpack://react-homework-template/./src/components/Contacts/ContactList.module.css?d8f1","components/Contacts/ContactList.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/pages/ContactPage/ContactPage.module.scss?0065","pages/ContactPage/ContactPage.jsx","../node_modules/@mui/icons-material/ContactPhone.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","export const selectContact = state => state.contacts.contacts\n","import s from '../Filter/Filter.module.css';\n// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contact-Slice';\nimport { selectContact } from 'redux/contacts/selector-contacts';\nimport { useSearchParams } from 'react-router-dom';\n\nconst FilterList = () => {\n  const [queryParams, setQueryParams] = useSearchParams();\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n\n  const handleFilterValue = ev => {\n    const value = ev.target.value.trim();\n\n    dispatch(setFilter(value));\n    setQueryParams(value === '' ? {} : { query: value });\n  };\n\n  if (contacts.length === 0) {\n    return;\n  }\n\n  return (\n    <div>\n      <label>\n        <span className={s.label}>Find contacts by name</span>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={queryParams.value}\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleFilterValue}\n        />\n      </label>\n    </div>\n  );\n};\n\n// FilterList.propTypes = {\n//   filter: PropTypes.string.isRequired,\n//   contacts: PropTypes.array.isRequired,\n//   onFindContacts: PropTypes.func.isRequired,\n// };\n\nexport default FilterList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__qP5it\",\"list\":\"ContactList_list__3DsEX\",\"item\":\"ContactList_item__i5sst\",\"text\":\"ContactList_text__gmWSH\",\"tel\":\"ContactList_tel__+U0UR\",\"btn\":\"ContactList_btn__wDIy8\"};","// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from '../Contacts/ContactList.module.css';\nimport { useEffect, useMemo } from 'react';\nimport { fetchAllContact } from '../../redux/contacts/operations-contact';\nimport { selectContact } from 'redux/contacts/selector-contacts';\nimport { deleteContact } from '../../redux/contacts/operations-contact';\nimport Button from '@mui/material/Button';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { selectAuth } from 'redux/auth/selector.auth';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContact);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const status = useSelector(selectAuth);\n\n  useEffect(() => {\n    if (status) {\n      dispatch(fetchAllContact());\n    }\n  }, [dispatch, status]);\n\n  // useMemo - кеширует данные повторно не рендерит\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(user =>\n      user.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [contacts, filter]);\n\n  if (contacts.length === 0) {\n    return;\n  }\n\n  return (\n    <div className={s.wrapper}>\n      <ul className={s.list}>\n        {filteredContacts.map(({ name, number, id }) => (\n          <li className={s.item} key={id}>\n            <p className= {s.text}> <ContactPhoneIcon sx={{ fontSize: 20, marginRight: 1 }}/>\n              {name} <span className={s.tel}>Tel: {number}</span>\n            </p>\n            <Button\n              variant=\"contained\"\n              startIcon={<DeleteIcon />}\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       userName: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   onDelete: PropTypes.func,\n// };\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"btn\":\"Form_btn__0ebGo\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations-contact';\nimport s from './Form.module.css';\nimport { toast } from 'react-toastify';\nimport { selectContact } from 'redux/contacts/selector-contacts';\nimport Button from '@mui/material/Button';\n\n// const shortid = require('shortid');\n\nconst Form = () => {\n  const [name, setUserName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n\n  const handleChangeUser = ev => {\n    const { name, value } = ev.target;\n\n    switch (name) {\n      case 'name':\n        setUserName(value);\n        // eslint-disable-next-line\n        break;\n\n      case 'number':\n        setNumber(value);\n        // eslint-disable-next-line\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleAddUser = e => {\n    e.preventDefault();\n\n    const hasUserContacts = contacts.some(user => user.name === name);\n\n    if (hasUserContacts) {\n      toast.warning(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setNumber('');\n    setUserName('');\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handleAddUser}>\n        <label>\n          <span className={s.label}>Name</span>\n          <input\n            className={s.input}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChangeUser}\n          />\n        </label>\n        <label>\n          <span className={s.label}>Tel</span>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChangeUser}\n          />\n        </label>\n\n        <Button\n          disabled={name && number ? false : true}\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactPage_wrapper__pecMG\"};","import FilterList from '../../components/Filter/FilterList';\nimport ContactList from 'components/Contacts/ContactList';\nimport Form from '../../components/Form/Form';\nimport s from './ContactPage.module.scss'\n\nconst ContactPage = () => {\n  return (\n    <>\n      <div className={s.wrapper}>\n        <Form />\n        <FilterList />\n        <ContactList />\n      </div>\n    </>\n  );\n};\n\nexport default ContactPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm3.85-4h1.64L21 16l-1.99 1.99c-1.31-.98-2.28-2.38-2.73-3.99-.18-.64-.28-1.31-.28-2s.1-1.36.28-2c.45-1.62 1.42-3.01 2.73-3.99L21 8l-1.51 2h-1.64c-.22.63-.35 1.3-.35 2s.13 1.37.35 2z\"\n}), 'ContactPhone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["selectContact","state","contacts","useSearchParams","queryParams","setQueryParams","useSelector","dispatch","useDispatch","length","className","s","type","value","name","pattern","title","required","onChange","ev","target","trim","setFilter","query","filter","status","selectAuth","useEffect","fetchAllContact","filteredContacts","useMemo","user","toLowerCase","includes","map","number","id","ContactPhone","sx","fontSize","marginRight","Button","variant","startIcon","Delete","onClick","deleteContact","useState","setUserName","setNumber","handleChangeUser","onSubmit","e","preventDefault","some","toast","addContact","disabled","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}